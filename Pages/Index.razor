@page "/"
@using System.Text
@using MyApplication.Datas
@using System.Text.Json
@using MyApplication.Helpers
@inject IJSRuntime JSRuntime
<PageTitle>sha1在线筛选</PageTitle>


<div>


    <Layout>
        <Affix OffsetTop="0">
            <Header>
                <MyInputFile Text="选择文件" OnChange="@LoadFiles"></MyInputFile>
                @if (!string.IsNullOrWhiteSpace(folderInfo))
                {
                    <span class="folder-info-span">@folderInfo</span>
                }
            </Header>
        </Affix>



        @if (selectedItem != null)
        {
            <Affix OffsetTop="64">
                <div style="background-color:#f2f2f2;padding:0px 40px">
                    <Row>
                        <GridCol Span="1">
                            <p>路径：</p>
                        </GridCol>
                        <GridCol Span="23">
                            <Breadcrumb>
                                @if (selectedItem != null)
                                {
                                    <BreadcrumbItem>
                                        <a @onclick="@(e=>PathCilck(root.ID))">根目录</a>
                                    </BreadcrumbItem>
                                    @if (!string.IsNullOrWhiteSpace(selectedItem.PathString))
                                    {
                                        var parents = GetSubPaths(selectedItem.ID).Reverse();
                                        if (parents.Count() >= 1)
                                        {
                                            foreach (var parent in parents.Skip(1))
                                            {
                                                <BreadcrumbItem>
                                                    <a @onclick="@(e=>PathCilck(parent.ID))">@parent.Name</a>
                                                </BreadcrumbItem>
                                            }
                                            <BreadcrumbItem>@selectedItem.Name</BreadcrumbItem>
                                        }

                                    }
                                }
                            </Breadcrumb>
                        </GridCol>
                    </Row>
                </div>


                <Descriptions style="background-color:#f2f2f2;padding:0px 40px">
                    <DescriptionsItem Title="信息">@($"文件夹：{selectedItem.FolderCount}，文件：{selectedItem.FileCount}，共{FileHelper.CalculateFileSize(selectedItem.Size)}")</DescriptionsItem>
                </Descriptions>
            </Affix>
        }

        @if (selectedItem == null)
        {
            <Empty></Empty>
        }
        else
        {
            <div style="height:calc(100vh - 220px); overflow-y:scroll">
                <ul class="ant-list-items">
                    <Virtualize TItem=@IItem Items="@selectedItem.Children" Context="item" ItemSize="24">
                        @if (item is FolderItem folder)
                        {
                            <li class="ant-list-item" @onclick="@(_=>ItemClick(item))">
                                <span class="ant-list-item-span">
                                    <Row>
                                        <AntDesign.Col Span="2">
                                            <Tooltip Title="@("复制sha1")">
                                                <Button Size="small" Icon="@IconType.Outline.Copy" OnClick="@(_=>CopySha1(item))" OnClickStopPropagation="true"></Button>

                                            </Tooltip>

                                            <Tooltip Title="@("删除")">
                                                <Button Size="small" Danger Icon="@IconType.Outline.Delete"></Button>
                                            </Tooltip>
                                        </AntDesign.Col>
                                        <AntDesign.Col Span="17">
                                            <Icon Type="folder" Theme="fill" />
                                            <span>@item.Name</span>
                                        </AntDesign.Col>
                                        <AntDesign.Col Span="5">
                                            <span>
                                                @($"文件夹：{folder.FolderCount}，文件：{folder.FileCount}，共{FileHelper.CalculateFileSize(folder.Size)}")
                                            </span>
                                        </AntDesign.Col>

                                    </Row>
                                </span>
                            </li>
                        }
                        else if (item is FileItem file)
                        {
                            <li class="ant-list-item">
                                <span class="ant-list-item-span">
                                    <Row>
                                        <AntDesign.Col Span="2">
                                            <Tooltip Title="@("复制sha1")">
                                                <Button Size="small" Icon="@IconType.Outline.Copy"></Button>

                                            </Tooltip>
                                            <Tooltip Title="@("重命名")">
                                                <Button Size="small" Icon="@IconType.Outline.Edit"></Button>
                                            </Tooltip>
                                            <Tooltip Title="@("删除")">
                                                <Button Size="small" Danger Icon="@IconType.Outline.Delete"></Button>
                                            </Tooltip>


                                        </AntDesign.Col>
                                        <AntDesign.Col Span="17">
                                            <Icon Type="file" Theme="fill" />
                                            <span>@item.Name</span>
                                        </AntDesign.Col>
                                        <AntDesign.Col Span="5">
                                            <span>
                                                @($"{FileHelper.CalculateFileSize(file.Size)}")
                                            </span>
                                        </AntDesign.Col>

                                    </Row>
                                </span>
                            </li>
                        }
                    </Virtualize>
                </ul>
            </div>

        }


        @if(selectedItem!=null)
        {
            <Footer Style="height:48px;margin:0px 100px">
            <Row>
                <GridCol>
                    <Dropdown Placement="@Placement.Top">
                        <Overlay>
                            <Menu>
                                <MenuItem>附加到此处...</MenuItem>
                                <MenuItem>附加到与原文件同级...</MenuItem>
                            </Menu>

                        </Overlay>
                        <ChildContent>
                            <Button>附加文件</Button>
                        </ChildContent>
                    </Dropdown>
                </GridCol>
                <GridCol>
                    <Dropdown Placement="@Placement.Top">
                        <Overlay>
                            <Menu>
                                <MenuItem>json格式</MenuItem>
                                <MenuItem>txt格式</MenuItem>
                            </Menu>

                        </Overlay>
                        <ChildContent>
                            <Button>导出文件</Button>
                        </ChildContent>
                    </Dropdown>
                </GridCol>

            </Row>
        </Footer>
        }
        

    </Layout>
    <Modal Visible="@IsFileLoading" Closable="false" Footer="null">
        <div style="text-align: center;">
            <Spin Size="large" Tip="文件加载中..." />
        </div>
    </Modal>
</div>

<style>

    .folder-info-span {
        color: white;
        margin-left: 40px;
    }

    .site-layout-background {
        background: #fff;
    }

    .ant-list-items {
        padding: 0px 4px 0px 40px;
    }

    .ant-list-item {
        vertical-align: middle;
        border-bottom: solid;
        border-color: darkgray;
        border-bottom-width: 1px;
        display: block;
        cursor: pointer
    }

        .ant-list-item:hover {
            background-color: #E8F0FC;
            color: #2777F8;
            display: block
        }
</style>


@code {
    public bool IsFileLoading { get; set; }



    public List<FileType> Extensions { get; set; } = new();


    private FolderItem selectedItem;
    private List<IItem> allItems = new List<IItem>();
    private FolderItem root;
    private string folderInfo;

    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        IsFileLoading = true;
        folderInfo = "";
        selectedItem = null;
        allItems.Clear();
        await Task.Delay(200);
        var stream = e.File.OpenReadStream(maxAllowedSize: e.File.Size);

        root = await FileHelper.ConverterFromFileAsync(stream, e.File.Name, Guid.NewGuid());

        folderInfo = $"【{root.Name}】： 文件夹: {root.FolderCount}， 文件: {root.FileCount}， 大小: {FileHelper.CalculateFileSize(root.Size)}";
        stream.Close();

        allItems = FileHelper.ConverterListFromFolderItem(root);



        selectedItem = root;

        AnalyzeFiles();
        this.StateHasChanged();
        IsFileLoading = false;
        this.StateHasChanged();
    }

    private void AnalyzeFiles()
    {
        //Extensions = Files.GroupBy(f => f.Extension).Select(g => new FileType { TypeName = g.Key, Count = g.Count() }).ToList();
    }

    private void FilterFiles()
    {

    }

    private async void CopyItemSha1(FileItem item)
    {
        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", item.OriginLink);

    }

    private void ItemClick(IItem item)
    {
        if (item is FolderItem folder)
        {
            selectedItem = folder;
        }
    }



    private void PathCilck(Guid id)
    {
        var folder = allItems.FirstOrDefault(q => q.ID == id);
        if (folder != null)
        {
            selectedItem = (FolderItem)folder;
        }
    }

    private void CopySha1(IItem item)
    {

    }

    private IEnumerable<FolderItem> GetSubPaths(Guid id)
    {
        var item = allItems.FirstOrDefault(q => q.ID == id);
        while (item.ID != root.ID)
        {
            item = allItems.FirstOrDefault(q => q.ID == item.ParentID && q is FolderItem);

            yield return (FolderItem)item;
        }
    }



}